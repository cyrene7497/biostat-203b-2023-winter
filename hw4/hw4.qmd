---
title: "Biostat 203B Homework 4"
subtitle: Due Mar 24 @ 11:59PM
author: Cyrene Arputhasamy (UID: 705527395)
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: true
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
knitr:
  opts_chunk: 
    cache: false    
    echo: true
    fig.align: 'center'
    fig.width: 6
    fig.height: 4
    message: FALSE
---

Display machine information:
```{r}
#| eval: true
sessionInfo()
```
Load database libraries and the tidyverse frontend:
```{r}
#| eval: true

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(tidymodels))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(gtsummary))
suppressPackageStartupMessages(library(GGally))
```

## Predicting 30-day mortality

Using the ICU cohort `icu_cohort.rds` you built in Homework 3, develop at least three analytic approaches for predicting the 30-day mortality of patients admitted to ICU using demographic information (gender, age, marital status, ethnicity), first lab measurements during ICU stay, and first vital measurements during ICU stay. For example, you can use (1) logistic regression with elastic net (lasso + ridge) penalty (e.g., glmnet or keras package), (2) random forest, (3) boosting, and (4) support vector machines, or (5) MLP neural network (keras package)
```{r}
icu_cohort <- readRDS("icu_cohort.rds") %>%
  select(
    -subject_id,
    -intime,
    -hadm_id,
    -stay_id,
    -last_careunit,
    -outtime,
    -los,
    -admittime,
    -dischtime,
    -deathtime,
    -discharge_location,
    -edregtime,
    -edouttime,
    -hospital_expire_flag,
    -anchor_age,
    -anchor_year,
    -anchor_year_group,
    -dod,
    -hadm_to_death)
icu_cohort %>% tbl_summary(by = thirty_day_mort)
```
```{r}
cat_features <- c("first_careunit", "admission_type", "insurance","ethnicity",
                  "gender")
num_features <- c("age_hadm", "wbc", "glucose","heart_rate", "respiratory_rate")
features <- c(cat_features, num_features)
```
```{r}
icu_tbl <- icu_cohort %>%
  select(features, thirty_day_mort) %>%
  print(width = Inf)
icu_tbl$first_careunit <- fct_lump_prop(icu_tbl$first_careunit, prop = 0.15, w = NULL, other_level = "Other")
icu_tbl$admission_type <- fct_lump_prop(icu_tbl$admission_type, prop = 0.10, w = NULL, other_level = "Other")
icu_tbl$ethnicity <- fct_lump_prop(icu_tbl$ethnicity, prop = 0.04, w = NULL, other_level = "Other")
tbl_summary(icu_tbl, by = thirty_day_mort)
```


```{r}
icu_tbl %>% ggpairs(columns = 1:5, ggplot2::aes(colour = thirty_day_mort))
icu_tbl %>% ggpairs(columns = 6:10, ggplot2::aes(colour = thirty_day_mort))
```

1. Partition data into 50% training set and 50% test set. Stratify partitioning according the 30-day mortality status.
```{r}
set.seed(203)
    
data_split <- initial_split(
  icu_tbl,
  #stratify by `thirty_day_mort`
  prop = 0.5
)
data_split
```

2. Train and tune the models using the training set.

3. Compare model classification performance on the test set. Report both the area under ROC curve and accuracy for each model.
